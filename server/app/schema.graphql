scalar Date

type Query {
  users: [User]!
  user: User!
  notification(id: String!): Notification!
  abbonementen: [Abbonement]!
  abbonement(id: String!): Abbonement!
}

type Mutation {
  createUser(userInput: UserInput!): User
  updateUser(
    _id: String!
    naam: String!
    image: String!
    email: String!
    wachtwoord: String!
  ): User
  login(email: String!, wachtwoord: String!): AuthData
  createAbbonement(abbonementInput: AbbonementInput!): Abbonement
}

type User {
  _id: String!
  naam: String!
  image: String
  email: String!
  wachtwoord: String!
  createdAbbonementen: [Abbonement!]
}

type Abbonement {
  _id: String!
  asteroidId: String!
  price: Int!
  naam: String!
  startTime: String!
  endTime: String!
  active: Boolean!
  userId: User!
}

input UserInput {
  naam: String!
  email: String!
  wachtwoord: String!
}

input AbbonementInput {
  asteroidId: String!
  price: Int!
  naam: String!
  startTime: String!
  endTime: String!
  active: Boolean!
}

type AuthData {
  userId: String!
  token: String!
  tokenExpiration: Int!
}

type Notification {
  _id: String!
  text: String!
}
